{"ast":null,"code":"// A reducer is a function that accepts the state and action then based on the action type, it carries out a logic\nimport posts from \"./po\";\n\nconst reducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'FETCH_ALL':\n      //for fetching all post\n      return posts;\n\n    case 'CREATE':\n      //for creating new posts\n      return posts;\n\n    default:\n      break;\n  }\n};","map":{"version":3,"sources":["/Users/koladebalogun/Desktop/Memoirs project/client/src/reducers/posts.js"],"names":["posts","reducer","state","action","type"],"mappings":"AAAA;AAEA,OAAOA,KAAP,MAAkB,MAAlB;;AAGA,MAAMC,OAAO,GAAG,YAAwB;AAAA,MAAvBC,KAAuB,uEAAf,EAAe;AAAA,MAAXC,MAAW;;AACpC,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,WAAL;AAAkB;AACd,aAAOJ,KAAP;;AACJ,SAAK,QAAL;AAAe;AACX,aAAOA,KAAP;;AACJ;AACI;AANR;AAQH,CATD","sourcesContent":["// A reducer is a function that accepts the state and action then based on the action type, it carries out a logic\n\nimport posts from \"./po\";\n\n\nconst reducer = (state = [], action) => {\n    switch (action.type) {\n        case 'FETCH_ALL': //for fetching all post\n            return posts;\n        case 'CREATE': //for creating new posts\n            return posts\n        default:\n            break;\n    }\n}"]},"metadata":{},"sourceType":"module"}