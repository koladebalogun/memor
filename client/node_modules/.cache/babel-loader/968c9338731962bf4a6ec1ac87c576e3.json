{"ast":null,"code":"import { AUTH } from '../constants/actionTypes';\nimport * as api from '../api'; // //if action creators are asyn, we use redux-thunk meaning we have a function that returns an async function with a disptach\n// export const signin = (formData, navigate) => async (dispatch) => {\n//     try {\n//         //login user\n//         const { data } = await api.signIn(formData);\n//         dispatch({ type: AUTH, data });\n//         navigate('/');\n//     } catch (error) {\n//         console.log(error);\n//     }\n// }\n// export const signup = (formData, navigate) => async (dispatch) => {\n//     try {\n//         // user signup\n//         const { data } = await api.signUp(formData);\n//         dispatch({ type: AUTH, data });\n//         navigate('/');\n//     } catch (error) {\n//         console.log(error); \n//     }\n// }","map":{"version":3,"sources":["/Users/koladebalogun/Desktop/Memoirs project/client/src/actions/auth.js"],"names":["AUTH","api"],"mappings":"AAAA,SAASA,IAAT,QAAqB,0BAArB;AACA,OAAO,KAAKC,GAAZ,MAAqB,QAArB,C,CAEA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA","sourcesContent":["import { AUTH } from '../constants/actionTypes';\nimport * as api from '../api';\n\n// //if action creators are asyn, we use redux-thunk meaning we have a function that returns an async function with a disptach\n\n// export const signin = (formData, navigate) => async (dispatch) => {\n//     try {\n//         //login user\n//         const { data } = await api.signIn(formData);\n\n//         dispatch({ type: AUTH, data });\n\n//         navigate('/');\n//     } catch (error) {\n//         console.log(error);\n//     }\n// }\n\n// export const signup = (formData, navigate) => async (dispatch) => {\n//     try {\n//         // user signup\n//         const { data } = await api.signUp(formData);\n\n//         dispatch({ type: AUTH, data });\n\n//         navigate('/');\n//     } catch (error) {\n//         console.log(error); \n//     }\n// }"]},"metadata":{},"sourceType":"module"}