{"ast":null,"code":"var _jsxFileName = \"/Users/koladebalogun/Desktop/Memoirs project/client/src/components/Posts/Post/Post.js\",\n    _s = $RefreshSig$();\n\n// ****\nimport React from \"react\";\nimport { Card, CardActions, CardMedia, CardContent, Button, Typography } from \"@material-ui/core\";\nimport ThumbUpAltIcon from \"@material-ui/icons/ThumbUpAlt\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\nimport moment from \"moment\";\nimport useStyles from \"./styles\";\nimport { useDispatch } from 'react-redux';\nimport { deletePost, likePost } from \"../../../actions/posts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Post = _ref => {\n  _s();\n\n  let {\n    post,\n    setCurrentId\n  } = _ref;\n  const classes = useStyles();\n  const dispatch = useDispatch(); //creating a subcomponent that will handle our like and likes\n\n  const Likes = () => {\n    if (post.likes.length > 0) {\n      return post.likes.find(like => {\n        var _user, _user$result, _user2, _user2$result;\n\n        return like === (((_user = user) === null || _user === void 0 ? void 0 : (_user$result = _user.result) === null || _user$result === void 0 ? void 0 : _user$result.googleId) || ((_user2 = user) === null || _user2 === void 0 ? void 0 : (_user2$result = _user2.result) === null || _user2$result === void 0 ? void 0 : _user2$result._id));\n      }) //Here we are checking if a current user liked a post or not\n      ?\n      /*#__PURE__*/\n      //Here we are checking if the likes array contains the id of the current user (either the google-id or the custom-id from the data base)\n      _jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(ThumbUpAltIcon, {\n          fontSize: \"small\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 13\n        }, this), \"\\xA0\", post.likes.length > 2 ? `You and ${post.likes.length - 1} others` : `${post.likes.length} like${post.likes.length > 1 ? 's' : ''}`]\n      }, void 0, true) //we'll have a message saying 'You and a certain number of people liked something or the has 1 or multiple likes\n      : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(ThumbUpAltOutlined, {\n          fontSize: \"small\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }, this), \"\\xA0\", post.likes.length, \" \", post.likes.length === 1 ? 'Like' : 'Likes']\n      }, void 0, true);\n    }\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(ThumbUpAltOutlined, {\n        fontSize: \"small\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 14\n      }, this), \"\\xA0Like\"]\n    }, void 0, true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.card,\n    children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n      className: classes.media,\n      image: post.selectedFile,\n      title: post.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.overlay,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: post.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        children: moment(post.createdAt).fromNow()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.overlay2,\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        style: {\n          color: \"white\"\n        },\n        size: \"small\",\n        onClick: () => setCurrentId(post._id),\n        children: [\" \", /*#__PURE__*/_jsxDEV(MoreHorizIcon, {\n          fontSize: \"medium\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.details,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        color: \"textSecondary\",\n        children: post.tags.map(tag => `#${tag} `)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      className: classes.title,\n      variant: \"h5\",\n      gutterBottom: true,\n      children: post.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        color: \"textSecondary\",\n        component: \"p\",\n        children: post.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n      className: classes.cardActions,\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        size: \"small\",\n        color: \"primary\",\n        onClick: () => dispatch(likePost(post._id)),\n        children: [/*#__PURE__*/_jsxDEV(ThumbUpAltIcon, {\n          fontSize: \"small\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), \"\\xA0 Like \\xA0 \", post.likeCount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        size: \"small\",\n        color: \"primary\",\n        onClick: () => dispatch(deletePost(post._id)),\n        children: [/*#__PURE__*/_jsxDEV(DeleteIcon, {\n          fontSize: \"small\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), \"Delete\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Post, \"aFWslISJzTtHlU1qXyXYeeBhNak=\", false, function () {\n  return [useStyles, useDispatch];\n});\n\n_c = Post;\nexport default Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["/Users/koladebalogun/Desktop/Memoirs project/client/src/components/Posts/Post/Post.js"],"names":["React","Card","CardActions","CardMedia","CardContent","Button","Typography","ThumbUpAltIcon","DeleteIcon","MoreHorizIcon","moment","useStyles","useDispatch","deletePost","likePost","Post","post","setCurrentId","classes","dispatch","Likes","likes","length","find","like","user","result","googleId","_id","card","media","selectedFile","title","overlay","name","createdAt","fromNow","overlay2","color","details","tags","map","tag","message","cardActions","likeCount"],"mappings":"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","sourcesContent":["// ****\nimport React from \"react\";\nimport { Card, CardActions, CardMedia, CardContent, Button, Typography } from \"@material-ui/core\";\nimport ThumbUpAltIcon from \"@material-ui/icons/ThumbUpAlt\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\n\nimport moment from \"moment\";\nimport useStyles from \"./styles\";\nimport { useDispatch } from 'react-redux'\n\nimport { deletePost, likePost } from \"../../../actions/posts\";\n\nconst Post = ({ post, setCurrentId }) => {\n  const classes = useStyles();\n\n  const dispatch = useDispatch();\n\n  //creating a subcomponent that will handle our like and likes\n  const Likes = () => {\n    if (post.likes.length > 0) {\n      return post.likes.find((like) => like === (user?.result?.googleId || user?.result?._id)) //Here we are checking if a current user liked a post or not\n        ? ( //Here we are checking if the likes array contains the id of the current user (either the google-id or the custom-id from the data base)\n          <><ThumbUpAltIcon fontSize=\"small\" />&nbsp;{post.likes.length > 2 ? `You and ${post.likes.length - 1} others` : `${post.likes.length} like${post.likes.length > 1 ? 's' : ''}` }</> //we'll have a message saying 'You and a certain number of people liked something or the has 1 or multiple likes\n        ) : (\n          <><ThumbUpAltOutlined fontSize=\"small\" />&nbsp;{post.likes.length} {post.likes.length === 1 ? 'Like' : 'Likes'}</>\n        );\n    }\n\n    return <><ThumbUpAltOutlined fontSize=\"small\" />&nbsp;Like</>;\n  };\n\n\n  return (\n    <Card className={classes.card}>\n      <CardMedia\n        className={classes.media}\n        image={post.selectedFile}\n        title={post.title}\n      />\n      <div className={classes.overlay}>\n        <Typography variant=\"h6\">{post.name}</Typography> {/******* */}\n        <Typography variant=\"body2\">\n          {moment(post.createdAt).fromNow()}\n        </Typography>\n      </div>\n      <div className={classes.overlay2}> \n        <Button\n          style={{ color: \"white\" }}\n          size=\"small\"\n          onClick={() => setCurrentId(post._id)}\n        >\n          {\" \"}\n          {/* For editing the post */}\n          <MoreHorizIcon fontSize=\"medium\" />\n        </Button>\n      </div>\n      <div className={classes.details}>\n        <Typography variant=\"body2\" color=\"textSecondary\">\n          {post.tags.map((tag) => `#${tag} `)}\n        </Typography>{\" \"}\n        {/* adding hashtags to our tags */}\n      </div>\n      <Typography className={classes.title} variant=\"h5\" gutterBottom>\n        {post.title }\n      </Typography>\n      <CardContent>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n          {post.message}\n        </Typography>\n      </CardContent>\n      <CardActions className={classes.cardActions}>\n        <Button size=\"small\" color=\"primary\" onClick={() => dispatch(likePost(post._id))}>\n          <ThumbUpAltIcon fontSize=\"small\" />\n          &nbsp; Like &nbsp; {/* &nbsp; is a code that adds spacing */}\n          {post.likeCount}\n        </Button>\n        <Button size=\"small\" color=\"primary\" onClick={() => dispatch(deletePost(post._id))}>\n          <DeleteIcon fontSize=\"small\" />\n          Delete\n        </Button>\n      </CardActions>\n    </Card>\n  );\n};\n\nexport default Post;\n"]},"metadata":{},"sourceType":"module"}