{"ast":null,"code":"import _regeneratorRuntime from\"/Users/koladebalogun/Desktop/New-Projects/Memoirs project/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/koladebalogun/Desktop/New-Projects/Memoirs project/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{FETCH_ALL,FETCH_POST,FETCH_BY_SEARCH,CREATE,UPDATE,DELETE,START_LOADING,END_LOADING,COMMENT}from'../constants/actionTypes';import*as api from'../api';//means we are importing everything from the api folder\n// Action Creators are functions that return actions and they have a type & payload\n//********************************* */\n// export const getPosts = () => async (dispatch) => {\n//     try {\n//         const { data } = await api.fetchPosts();\n//         dispatch({ type: FETCH_ALL, payload: data });\n//     } catch (error ) {\n//         console.log(error.message); \n//     }\n// };\n//********************************* */\n//for fetching single post(post with more details)\nexport var getPost=function getPost(id){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){var _yield$api$fetchPost,data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;dispatch({type:START_LOADING});_context.next=4;return api.fetchPost(id);case 4:_yield$api$fetchPost=_context.sent;data=_yield$api$fetchPost.data;dispatch({type:FETCH_POST,payload:data});//our payload is now an object that contains different things(data of post, current page and number of pages)\ndispatch({type:END_LOADING});_context.next=13;break;case 10:_context.prev=10;_context.t0=_context[\"catch\"](0);console.log(_context.t0.message);case 13:case\"end\":return _context.stop();}}},_callee,null,[[0,10]]);}));return function(_x){return _ref.apply(this,arguments);};}();};//for getting posts with pages\nexport var getPosts=function getPosts(page){return/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch){var _yield$api$fetchPosts,data;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;dispatch({type:START_LOADING});_context2.next=4;return api.fetchPosts(page);case 4:_yield$api$fetchPosts=_context2.sent;data=_yield$api$fetchPosts.data;dispatch({type:FETCH_ALL,payload:data});dispatch({type:END_LOADING});_context2.next=13;break;case 10:_context2.prev=10;_context2.t0=_context2[\"catch\"](0);console.log(_context2.t0.message);case 13:case\"end\":return _context2.stop();}}},_callee2,null,[[0,10]]);}));return function(_x2){return _ref2.apply(this,arguments);};}();};export var getPostsBySearch=function getPostsBySearch(searchQuery){return/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dispatch){var _yield$api$fetchPosts2,data;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.prev=0;dispatch({type:START_LOADING});_context3.next=4;return api.fetchPostsBySearch(searchQuery);case 4:_yield$api$fetchPosts2=_context3.sent;data=_yield$api$fetchPosts2.data.data;dispatch({type:FETCH_BY_SEARCH,payload:data});dispatch({type:END_LOADING});_context3.next=13;break;case 10:_context3.prev=10;_context3.t0=_context3[\"catch\"](0);console.log(_context3.t0);case 13:case\"end\":return _context3.stop();}}},_callee3,null,[[0,10]]);}));return function(_x3){return _ref3.apply(this,arguments);};}();};export var createPost=function createPost(post){return/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(dispatch){var _yield$api$createPost,data;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.prev=0;dispatch({type:START_LOADING});_context4.next=4;return api.createPost(post);case 4:_yield$api$createPost=_context4.sent;data=_yield$api$createPost.data;// this is simply making an api request to the back end server\ndispatch({type:CREATE,payload:data});dispatch({type:END_LOADING});_context4.next=13;break;case 10:_context4.prev=10;_context4.t0=_context4[\"catch\"](0);console.log(_context4.t0);case 13:case\"end\":return _context4.stop();}}},_callee4,null,[[0,10]]);}));return function(_x4){return _ref4.apply(this,arguments);};}();};export var updatePost=function updatePost(id,post){return/*#__PURE__*/function(){var _ref5=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee5(dispatch){var _yield$api$updatePost,data;return _regeneratorRuntime.wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:_context5.prev=0;_context5.next=3;return api.updatePost(id,post);case 3:_yield$api$updatePost=_context5.sent;data=_yield$api$updatePost.data;dispatch({type:UPDATE,payload:data});_context5.next=11;break;case 8:_context5.prev=8;_context5.t0=_context5[\"catch\"](0);console.log(_context5.t0);case 11:case\"end\":return _context5.stop();}}},_callee5,null,[[0,8]]);}));return function(_x5){return _ref5.apply(this,arguments);};}();};export var deletePost=function deletePost(id){return/*#__PURE__*/function(){var _ref6=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee6(dispatch){return _regeneratorRuntime.wrap(function _callee6$(_context6){while(1){switch(_context6.prev=_context6.next){case 0:_context6.prev=0;_context6.next=3;return api.deletePost(id);case 3:dispatch({type:DELETE,payload:id});_context6.next=9;break;case 6:_context6.prev=6;_context6.t0=_context6[\"catch\"](0);console.log(_context6.t0);case 9:case\"end\":return _context6.stop();}}},_callee6,null,[[0,6]]);}));return function(_x6){return _ref6.apply(this,arguments);};}();};export var likePost=function likePost(id){return/*#__PURE__*/function(){var _ref7=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee7(dispatch){var _yield$api$likePost,data;return _regeneratorRuntime.wrap(function _callee7$(_context7){while(1){switch(_context7.prev=_context7.next){case 0:_context7.prev=0;_context7.next=3;return api.likePost(id);case 3:_yield$api$likePost=_context7.sent;data=_yield$api$likePost.data;dispatch({type:UPDATE,payload:data});_context7.next=11;break;case 8:_context7.prev=8;_context7.t0=_context7[\"catch\"](0);console.log(_context7.t0);case 11:case\"end\":return _context7.stop();}}},_callee7,null,[[0,8]]);}));return function(_x7){return _ref7.apply(this,arguments);};}();};//COMMENT POST\nexport var commentPost=function commentPost(value,id){return/*#__PURE__*/function(){var _ref8=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee8(dispatch){var _yield$api$comment,data;return _regeneratorRuntime.wrap(function _callee8$(_context8){while(1){switch(_context8.prev=_context8.next){case 0:_context8.prev=0;_context8.next=3;return api.comment(value,id);case 3:_yield$api$comment=_context8.sent;data=_yield$api$comment.data;dispatch({type:COMMENT,payload:data});return _context8.abrupt(\"return\",data.comments);case 9:_context8.prev=9;_context8.t0=_context8[\"catch\"](0);console.log(_context8.t0);case 12:case\"end\":return _context8.stop();}}},_callee8,null,[[0,9]]);}));return function(_x8){return _ref8.apply(this,arguments);};}();};//From here, we move to the reducers to implement our actions\n//const { data} .. we are simply taking the data from the response object","map":{"version":3,"sources":["/Users/koladebalogun/Desktop/New-Projects/Memoirs project/client/src/actions/posts.js"],"names":["FETCH_ALL","FETCH_POST","FETCH_BY_SEARCH","CREATE","UPDATE","DELETE","START_LOADING","END_LOADING","COMMENT","api","getPost","id","dispatch","type","fetchPost","data","payload","console","log","message","getPosts","page","fetchPosts","getPostsBySearch","searchQuery","fetchPostsBySearch","createPost","post","updatePost","deletePost","likePost","commentPost","value","comment","comments"],"mappings":"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","sourcesContent":["import { FETCH_ALL, FETCH_POST, FETCH_BY_SEARCH, CREATE, UPDATE, DELETE, START_LOADING, END_LOADING, COMMENT } from '../constants/actionTypes';\nimport * as api from '../api' //means we are importing everything from the api folder\n\n\n// Action Creators are functions that return actions and they have a type & payload\n\n//********************************* */\n\n// export const getPosts = () => async (dispatch) => {\n//     try {\n//         const { data } = await api.fetchPosts();\n\n//         dispatch({ type: FETCH_ALL, payload: data });\n//     } catch (error ) {\n//         console.log(error.message); \n//     }\n// };\n\n//********************************* */\n//for fetching single post(post with more details)\nexport const getPost = (id) => async (dispatch) => {\n    try {\n        dispatch({ type: START_LOADING })\n        const { data } = await api.fetchPost(id);\n\n        dispatch({ type: FETCH_POST, payload: data }); //our payload is now an object that contains different things(data of post, current page and number of pages)\n        dispatch({ type: END_LOADING });\n    } catch (error ) {\n        console.log(error.message); \n    }\n};\n\n\n//for getting posts with pages\nexport const getPosts = (page) => async (dispatch) => {\n    try {\n        dispatch({ type: START_LOADING })\n        const { data } = await api.fetchPosts(page);\n\n        dispatch({ type: FETCH_ALL, payload: data });\n        dispatch({ type: END_LOADING });\n    } catch (error ) {\n        console.log(error.message); \n    }\n};\n\n\nexport const getPostsBySearch = (searchQuery) => async (dispatch) => {\n    try {\n        dispatch({ type: START_LOADING })\n        const { data: { data } } = await api.fetchPostsBySearch(searchQuery);\n\n        dispatch({ type: FETCH_BY_SEARCH, payload: data });\n        dispatch({ type: END_LOADING });\n    } catch (error) {\n        console.log(error)\n    }\n\n};\n\n\n\n\nexport const createPost = (post ) => async (dispatch) => {\n    try {\n        dispatch({ type: START_LOADING })\n        const { data } = await api.createPost(post); // this is simply making an api request to the back end server\n\n        dispatch({ type: CREATE, payload: data  });\n        dispatch({ type: END_LOADING });\n    } catch (error ) {\n        console.log(error); \n    }\n};\n\nexport const updatePost = (id, post) => async (dispatch) => {\n    try {\n        const { data } = await api.updatePost(id, post); \n\n        dispatch({ type: UPDATE, payload: data  });\n    } catch (error ) {\n        console.log(error ); \n    }\n};\n\nexport const deletePost = (id) => async (dispatch) => {\n    try {\n        await api.deletePost(id); \n\n        dispatch({ type: DELETE, payload: id  });\n    } catch (error ) {\n        console.log(error); \n    }\n};\n\nexport const likePost = (id) => async (dispatch) => {\n    try {\n        const { data } = await api.likePost(id); \n\n        dispatch({ type: UPDATE, payload: data  });\n    } catch (error ) {\n        console.log(error); \n    }\n};\n\n//COMMENT POST\nexport const commentPost = (value, id) => async (dispatch) => {\n    try {\n       const { data } = await api.comment(value, id);\n\n       dispatch({ type: COMMENT, payload: data  });\n       return data.comments;\n    } catch (error) {\n        console.log(error);\n    }\n}\n\n\n//From here, we move to the reducers to implement our actions\n\n//const { data} .. we are simply taking the data from the response object "]},"metadata":{},"sourceType":"module"}