{"ast":null,"code":"// A reducer is a function that accepts the state and action then based on the action type, it carries out a logic\nexport default (function () {\n  let posts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'FETCH_ALL':\n      //for fetching all post\n      return action.pa;\n\n    case 'CREATE':\n      //for creating new posts\n      return posts;\n\n    default:\n      return posts;\n  }\n});","map":{"version":3,"sources":["/Users/koladebalogun/Desktop/Memoirs project/client/src/reducers/posts.js"],"names":["posts","action","type","pa"],"mappings":"AAAA;AACA,gBAAe,YAAwB;AAAA,MAAvBA,KAAuB,uEAAf,EAAe;AAAA,MAAXC,MAAW;;AACnC,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,WAAL;AAAkB;AACd,aAAOD,MAAM,CAACE,EAAd;;AACJ,SAAK,QAAL;AAAe;AACX,aAAOH,KAAP;;AACJ;AACI,aAAOA,KAAP;AANR;AAQH,CATD","sourcesContent":["// A reducer is a function that accepts the state and action then based on the action type, it carries out a logic\nexport default (posts = [], action) => {\n    switch (action.type) {\n        case 'FETCH_ALL': //for fetching all post\n            return action.pa;\n        case 'CREATE': //for creating new posts\n            return posts\n        default:\n            return posts;\n    }\n}"]},"metadata":{},"sourceType":"module"}