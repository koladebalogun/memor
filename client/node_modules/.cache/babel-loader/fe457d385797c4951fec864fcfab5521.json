{"ast":null,"code":"import _objectSpread from\"/Users/koladebalogun/Desktop/New-Projects/Memoirs project/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{AUTH,LOGOUT}from\"../constants/actionTypes\";var authReducer=function authReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{authData:null};var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case AUTH:localStorage.setItem(\"profile\",JSON.stringify(_objectSpread({},action===null||action===void 0?void 0:action.data)));//save the data in local storage so on page refresh, the browser will still know we are logged in\nreturn _objectSpread(_objectSpread({},state),{},{authData:action===null||action===void 0?void 0:action.data});case LOGOUT:localStorage.clear();return _objectSpread(_objectSpread({},state),{},{authData:null});default:return state;}};export default authReducer;//from here, we move to the index.js of our reducers and import it there\n//Afterwards, we move to Navbar because that's the best place to use this data since we already have our user which is currently set to null in that component.","map":{"version":3,"sources":["/Users/koladebalogun/Desktop/New-Projects/Memoirs project/client/src/reducers/auth.js"],"names":["AUTH","LOGOUT","authReducer","state","authData","action","type","localStorage","setItem","JSON","stringify","data","clear"],"mappings":"sLAAA,OAASA,IAAT,CAAeC,MAAf,KAA6B,0BAA7B,CAEA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAwC,IAAvCC,CAAAA,KAAuC,2DAA/B,CAAEC,QAAQ,CAAE,IAAZ,CAA+B,IAAXC,CAAAA,MAAW,2CAC1D,OAAQA,MAAM,CAACC,IAAf,EACE,IAAKN,CAAAA,IAAL,CACEO,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAgCC,IAAI,CAACC,SAAL,kBAAoBL,MAApB,SAAoBA,MAApB,iBAAoBA,MAAM,CAAEM,IAA5B,EAAhC,EAAsE;AACtE,sCAAYR,KAAZ,MAAmBC,QAAQ,CAAEC,MAAF,SAAEA,MAAF,iBAAEA,MAAM,CAAEM,IAArC,GAEF,IAAKV,CAAAA,MAAL,CACEM,YAAY,CAACK,KAAb,GAEA,sCAAYT,KAAZ,MAAmBC,QAAQ,CAAE,IAA7B,GACF,QACE,MAAOD,CAAAA,KAAP,CAVJ,CAYD,CAbD,CAeA,cAAeD,CAAAA,WAAf,CAEA;AAEA","sourcesContent":["import { AUTH, LOGOUT } from \"../constants/actionTypes\";\n\nconst authReducer = (state = { authData: null }, action) => {\n  switch (action.type) {\n    case AUTH:\n      localStorage.setItem(\"profile\", JSON.stringify({ ...action?.data })); //save the data in local storage so on page refresh, the browser will still know we are logged in\n      return { ...state, authData: action?.data };\n\n    case LOGOUT:\n      localStorage.clear();\n\n      return { ...state, authData: null };\n    default:\n      return state;\n  }\n};\n\nexport default authReducer;\n\n//from here, we move to the index.js of our reducers and import it there\n\n//Afterwards, we move to Navbar because that's the best place to use this data since we already have our user which is currently set to null in that component.\n"]},"metadata":{},"sourceType":"module"}