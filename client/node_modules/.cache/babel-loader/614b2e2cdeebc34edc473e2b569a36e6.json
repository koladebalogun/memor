{"ast":null,"code":"var _jsxFileName = \"/Users/koladebalogun/Desktop/Memoirs project/client/src/components/Posts/Posts.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Grid, CircularProgress } from \"@material-ui/core\"; // ***\n\nimport Post from \"./Post/Post\";\nimport { useSelector } from \"react-redux\";\nimport useStyles from \"./styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Posts = _ref => {\n  _s();\n\n  let {\n    setCurrentId\n  } = _ref;\n  const {\n    posts,\n    isLoading\n  } = useSelector(state => state.posts); // ^^^^^^^^^^^^^^^^^^^^^^^^^\n\n  const classes = useStyles();\n  console.log(posts);\n  if (!posts.length && !isLoading) return 'No Posts';\n  return isLoading ? /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 17\n  }, this) :\n  /*#__PURE__*/\n  //if there's no post.length, show circular progress (loading) else show content\n  _jsxDEV(Grid, {\n    className: classes.container,\n    container: true,\n    alignItems: \"stretch\",\n    spacing: 3,\n    children: posts.map(post => /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      sm: 12,\n      md: 6,\n      lg: 3,\n      children: [/*#__PURE__*/_jsxDEV(Post, {\n        post: post,\n        setCurrentId: setCurrentId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 15\n      }, this), \" \"]\n    }, post._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 11\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 7\n  }, this);\n};\n\n_s(Posts, \"CuCR8wLtWkh3VwSjn8ZtHTSNjYA=\", false, function () {\n  return [useSelector, useStyles];\n});\n\n_c = Posts;\nexport default Posts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"sources":["/Users/koladebalogun/Desktop/Memoirs project/client/src/components/Posts/Posts.js"],"names":["React","Grid","CircularProgress","Post","useSelector","useStyles","Posts","setCurrentId","posts","isLoading","state","classes","console","log","length","container","map","post","_id"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,gBAAf,QAAuC,mBAAvC,C,CAA4D;;AAC5D,OAAOC,IAAP,MAAiB,aAAjB;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,OAAOC,SAAP,MAAsB,UAAtB;;;AAEA,MAAMC,KAAK,GAAG,QAAoB;AAAA;;AAAA,MAAnB;AAACC,IAAAA;AAAD,GAAmB;AAChC,QAAM;AAACC,IAAAA,KAAD;AAAQC,IAAAA;AAAR,MAAqBL,WAAW,CAAEM,KAAD,IAAWA,KAAK,CAACF,KAAlB,CAAtC,CADgC,CAC+B;;AAC/D,QAAMG,OAAO,GAAGN,SAAS,EAAzB;AAEAO,EAAAA,OAAO,CAACC,GAAR,CAAYL,KAAZ;AAEA,MAAG,CAACA,KAAK,CAACM,MAAP,IAAiB,CAACL,SAArB,EAAgC,OAAO,UAAP;AAChC,SACEA,SAAS,gBAAG,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA,UAAH;AAAA;AAA4B;AACnC,UAAC,IAAD;AAAM,IAAA,SAAS,EAAEE,OAAO,CAACI,SAAzB;AAAoC,IAAA,SAAS,MAA7C;AAA8C,IAAA,UAAU,EAAC,SAAzD;AAAmE,IAAA,OAAO,EAAE,CAA5E;AAAA,cACGP,KAAK,CAACQ,GAAN,CAAWC,IAAD,iBACT,QAAC,IAAD;AAAqB,MAAA,IAAI,MAAzB;AAA0B,MAAA,EAAE,EAAE,EAA9B;AAAkC,MAAA,EAAE,EAAE,EAAtC;AAA0C,MAAA,EAAE,EAAE,CAA9C;AAAiD,MAAA,EAAE,EAAE,CAArD;AAAA,8BACI,QAAC,IAAD;AAAM,QAAA,IAAI,EAAEA,IAAZ;AAAkB,QAAA,YAAY,EAAEV;AAAhC;AAAA;AAAA;AAAA;AAAA,cADJ;AAAA,OAAWU,IAAI,CAACC,GAAhB;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UAFJ;AAaD,CApBD;;GAAMZ,K;UACuBF,W,EACXC,S;;;KAFZC,K;AAsBN,eAAeA,KAAf","sourcesContent":["import React from \"react\";\nimport { Grid, CircularProgress } from \"@material-ui/core\"; // ***\nimport Post from \"./Post/Post\";\nimport { useSelector } from \"react-redux\";\n\nimport useStyles from \"./styles\";\n\nconst Posts = ({setCurrentId}) => {\n  const {posts, isLoading} = useSelector((state) => state.posts) // ^^^^^^^^^^^^^^^^^^^^^^^^^\n  const classes = useStyles();\n\n  console.log(posts)\n\n  if(!posts.length && !isLoading) return 'No Posts'\n  return (\n    isLoading ? <CircularProgress/> : (  //if there's no post.length, show circular progress (loading) else show content\n      <Grid className={classes.container} container alignItems=\"stretch\" spacing={3}>\n        {posts.map((post) => (\n          <Grid key={post._id} item xs={12} sm={12} md={6} lg={3}>\n              <Post post={post} setCurrentId={setCurrentId} /> {/* we'll pass the (setCurrentId) one level deeper into the post component. this is called props drilling */}\n          </Grid>\n        ))\n          \n        }\n      </Grid>\n    )\n  );\n};\n\nexport default Posts;\n"]},"metadata":{},"sourceType":"module"}