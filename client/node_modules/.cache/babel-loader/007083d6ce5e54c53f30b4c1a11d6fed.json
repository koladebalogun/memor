{"ast":null,"code":"var _jsxFileName = \"/Users/koladebalogun/Desktop/Memoirs project/client/src/components/PostDetails/CommentSection.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from \"react\";\nimport { Typography, TextField, Button } from '@material-ui/core';\nimport { useDispatch } from 'react-redux';\nimport useStyles from './styles';\nimport { commentPost } from '../../actions/posts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CommentSection = _ref => {\n  _s();\n\n  var _user$result;\n\n  let {\n    post\n  } = _ref;\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const [comments, setComments] = useState(post === null || post === void 0 ? void 0 : post.comments);\n  const [comment, setComment] = useState(''); //this state will keep track of the value of a specific comment\n\n  const user = JSON.parse(localStorage.getItem('profile')); //grabbing our user from loacl storage to get the details of the person adding a comment\n\n  const commentsRef = useRef();\n\n  const handleClick = async () => {\n    const finalComment = `${user.result.name}: ${comment}`;\n    const newComments = await dispatch(commentPost(finalComment, post._id));\n    setComments(newComments);\n    setComment('');\n    commn;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.commentsOuterContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.commentsInnerContainer,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          gutterBottom: true,\n          variant: \"h6\",\n          children: \"Comments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this), comments.map((comment, index) => /*#__PURE__*/_jsxDEV(Typography, {\n          gutterBottom: true,\n          variant: \"subtitle1\",\n          children: comment\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 25\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: commentsRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), (user === null || user === void 0 ? void 0 : (_user$result = user.result) === null || _user$result === void 0 ? void 0 : _user$result.name) && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '70%'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          gutterBottom: true,\n          variant: \"h6\",\n          children: \"Leave a comment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          rows: 4,\n          variant: \"outlined\",\n          label: \"Comment\",\n          multiline: true,\n          value: comment,\n          onChange: e => setComment(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          style: {\n            marginTop: '10px'\n          },\n          fullWidth: true,\n          disabled: !comment,\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: handleClick,\n          children: \"Comment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CommentSection, \"YuOIDOBSWgCA9O+Pq3tAgTAacGw=\", false, function () {\n  return [useStyles, useDispatch];\n});\n\n_c = CommentSection;\nexport default CommentSection; //we'll pass the comment section inside the post details component.\n\nvar _c;\n\n$RefreshReg$(_c, \"CommentSection\");","map":{"version":3,"sources":["/Users/koladebalogun/Desktop/Memoirs project/client/src/components/PostDetails/CommentSection.jsx"],"names":["React","useRef","useState","Typography","TextField","Button","useDispatch","useStyles","commentPost","CommentSection","post","classes","dispatch","comments","setComments","comment","setComment","user","JSON","parse","localStorage","getItem","commentsRef","handleClick","finalComment","result","name","newComments","_id","commn","commentsOuterContainer","commentsInnerContainer","map","index","width","e","target","value","marginTop"],"mappings":"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","sourcesContent":["import React, {useRef, useState} from \"react\";\nimport { Typography, TextField, Button } from '@material-ui/core';\nimport { useDispatch } from 'react-redux';\n\nimport useStyles from './styles';\nimport { commentPost } from '../../actions/posts'\n\nconst CommentSection = ({ post }) => {\n    const classes = useStyles();\n    const dispatch = useDispatch();\n    const [ comments, setComments ] = useState(post?.comments);\n    const [ comment, setComment ] = useState(''); //this state will keep track of the value of a specific comment\n    const user  = JSON.parse(localStorage.getItem('profile')); //grabbing our user from loacl storage to get the details of the person adding a comment\n    const commentsRef = useRef(); \n\n    const handleClick = async() => {\n        const finalComment = `${user.result.name}: ${comment}`;\n\n        const newComments = await dispatch(commentPost(finalComment, post._id));\n\n        setComments(newComments);\n        setComment('');\n\n        commn\n    }\n\n    return ( \n        <div>\n            <div className={classes.commentsOuterContainer }>\n                <div className={classes.commentsInnerContainer}>\n                    <Typography gutterBottom variant=\"h6\">Comments</Typography>\n                    {comments.map((comment, index) => (\n                        <Typography key={index} gutterBottom variant=\"subtitle1\">\n                            {comment}\n                        </Typography>\n                    ))}\n                    <div ref={commentsRef}/>\n                </div>\n                {/* If there's a user, display this code which will allow the user to add and view comments*/}\n                {user?.result?.name && (\n                    <div style={{ width: '70%'}}>\n                    <Typography gutterBottom variant=\"h6\" >Leave a comment</Typography>\n                    <TextField \n                    fullWidth\n                    rows={4}\n                    variant=\"outlined\"\n                    label=\"Comment\"\n                    multiline\n                    value={comment}\n                    onChange={(e) => setComment(e.target.value) }\n                    />\n                    <Button style={{ marginTop: '10px'}} fullWidth disabled={!comment} variant=\"contained\" color=\"primary\" onClick={handleClick}>Comment</Button>\n                    </div> \n                )}\n            </div>\n        </div>\n     );\n}\n \nexport default CommentSection;\n\n//we'll pass the comment section inside the post details component."]},"metadata":{},"sourceType":"module"}