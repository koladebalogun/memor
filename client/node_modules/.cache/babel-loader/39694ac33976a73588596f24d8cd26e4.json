{"ast":null,"code":"import { FETCH_ALL, FETCH_BY_SEARCH, CREATE, UPDATE, DELETE, START_LOADING, END_LOADING } from '../constants/actionTypes';\nimport * as api from '../api'; //means we are importing everything from the api folder\n// Action Creators are functions that return actions and they have a type & payload\n//********************************* */\n// export const getPosts = () => async (dispatch) => {\n//     try {\n//         const { data } = await api.fetchPosts();\n//         dispatch({ type: FETCH_ALL, payload: data });\n//     } catch (error ) {\n//         console.log(error.message); \n//     }\n// };\n//********************************* */\n//for get pages\n\nexport const getPosts = page => async dispatch => {\n  try {\n    dispat;\n    const {\n      data\n    } = await api.fetchPosts(page);\n    dispatch({\n      type: FETCH_ALL,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n}; //^^^^^^^\n\nexport const getPostsBySearch = searchQuery => async dispatch => {\n  try {\n    const {\n      data: {\n        data\n      }\n    } = await api.fetchPostsBySearch(searchQuery);\n    dispatch({\n      type: FETCH_BY_SEARCH,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n}; //^^^^^\n\nexport const createPost = post => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.createPost(post); // this is simply making an api request to the back end server\n\n    dispatch({\n      type: CREATE,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n}; // ****\n\nexport const updatePost = (id, post) => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.updatePost(id, post);\n    dispatch({\n      type: UPDATE,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const deletePost = id => async dispatch => {\n  try {\n    await api.deletePost(id);\n    dispatch({\n      type: DELETE,\n      payload: id\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const likePost = id => async dispatch => {\n  // const user = JSON.parse(localStorage.getItem('profile'));  //***** */ \n  try {\n    const {\n      data\n    } = await api.likePost(id);\n    dispatch({\n      type: UPDATE,\n      payload: data\n    }); //******* */\n  } catch (error) {\n    console.log(error);\n  }\n}; //From here, we move to the reducers to implement our actions","map":{"version":3,"sources":["/Users/koladebalogun/Desktop/Memoirs project/client/src/actions/posts.js"],"names":["FETCH_ALL","FETCH_BY_SEARCH","CREATE","UPDATE","DELETE","START_LOADING","END_LOADING","api","getPosts","page","dispatch","dispat","data","fetchPosts","type","payload","error","console","log","message","getPostsBySearch","searchQuery","fetchPostsBySearch","createPost","post","updatePost","id","deletePost","likePost"],"mappings":"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","sourcesContent":["import { FETCH_ALL, FETCH_BY_SEARCH, CREATE, UPDATE, DELETE, START_LOADING, END_LOADING } from '../constants/actionTypes';\nimport * as api from '../api' //means we are importing everything from the api folder\n\n// Action Creators are functions that return actions and they have a type & payload\n\n//********************************* */\n\n// export const getPosts = () => async (dispatch) => {\n//     try {\n//         const { data } = await api.fetchPosts();\n\n//         dispatch({ type: FETCH_ALL, payload: data });\n//     } catch (error ) {\n//         console.log(error.message); \n//     }\n// };\n\n//********************************* */\n\n//for get pages\nexport const getPosts = (page) => async (dispatch) => {\n    try {\n        dispat\n        const { data } = await api.fetchPosts(page);\n\n        dispatch({ type: FETCH_ALL, payload: data });\n    } catch (error ) {\n        console.log(error.message); \n    }\n};\n\n//^^^^^^^\nexport const getPostsBySearch = (searchQuery) => async (dispatch) => {\n    try {\n        const { data: { data } } = await api.fetchPostsBySearch(searchQuery);\n\n        dispatch({ type: FETCH_BY_SEARCH, payload: data });\n    } catch (error) {\n        console.log(error)\n    }\n\n};\n//^^^^^\n\n\n\nexport const createPost = (post) => async (dispatch) => {\n    try {\n        const { data } = await api.createPost(post); // this is simply making an api request to the back end server\n\n        dispatch({ type: CREATE, payload: data  });\n    } catch (error ) {\n        console.log(error); \n    }\n};\n\n// ****\nexport const updatePost = (id, post) => async (dispatch) => {\n    try {\n        const { data } = await api.updatePost(id, post); \n\n        dispatch({ type: UPDATE, payload: data  });\n    } catch (error ) {\n        console.log(error ); \n    }\n};\n\nexport const deletePost = (id) => async (dispatch) => {\n    try {\n        await api.deletePost(id); \n\n        dispatch({ type: DELETE, payload: id  });\n    } catch (error ) {\n        console.log(error); \n    }\n};\n\nexport const likePost = (id) => async (dispatch) => {\n    // const user = JSON.parse(localStorage.getItem('profile'));  //***** */ \n    try {\n        const { data } = await api.likePost(id); \n\n        dispatch({ type: UPDATE, payload: data  }); //******* */\n    } catch (error ) {\n        console.log(error); \n    }\n};\n\n\n//From here, we move to the reducers to implement our actions"]},"metadata":{},"sourceType":"module"}