{"ast":null,"code":"import { AUTH, LOGOUT } from \"../constants/actionTypes\";\n\nconst authReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    authData: null\n  };\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case AUTH:\n      localStorage.setItem('profile', JSON.stringify({ ...(action === null || action === void 0 ? void 0 : action.data)\n      })); //save the data in local storage so on page refresh, the browser will still know we are logged in\n\n      return { ...state,\n        authData: action === null || action === void 0 ? void 0 : action.data\n      };\n\n    case LOGOUT:\n      localStorage.clear();\n      return { ...state,\n        authData: action === null || action === void 0 ? void 0 : action.data\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default authReducer; //from here, we move to the index.js of our reducers and import it there\n//Afterwards, we move to Navbar because that's the best place to use this data since we already have our user which is currently set to null in that component.","map":{"version":3,"sources":["/Users/koladebalogun/Desktop/Memoirs project/client/src/reducers/auth.js"],"names":["AUTH","LOGOUT","authReducer","state","authData","action","type","localStorage","setItem","JSON","stringify","data","clear"],"mappings":"AAAA,SAASA,IAAT,EAAeC,MAAf,QAA6B,0BAA7B;;AAEA,MAAMC,WAAW,GAAG,YAAyC;AAAA,MAAxCC,KAAwC,uEAAhC;AAAEC,IAAAA,QAAQ,EAAG;AAAb,GAAgC;AAAA,MAAXC,MAAW;;AAC3D,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKN,IAAL;AACEO,MAAAA,YAAY,CAACC,OAAb,CAAqB,SAArB,EAAgCC,IAAI,CAACC,SAAL,CAAe,EAAE,IAAGL,MAAH,aAAGA,MAAH,uBAAGA,MAAM,CAAEM,IAAX;AAAF,OAAf,CAAhC,EADF,CACsE;;AACpE,aAAO,EAAE,GAAGR,KAAL;AAAYC,QAAAA,QAAQ,EAAEC,MAAF,aAAEA,MAAF,uBAAEA,MAAM,CAAEM;AAA9B,OAAP;;AAEA,SAAKV,MAAL;AACEM,MAAAA,YAAY,CAACK,KAAb;AAEA,aAAO,EAAE,GAAGT,KAAL;AAAYC,QAAAA,QAAQ,EAAEC,MAAF,aAAEA,MAAF,uBAAEA,MAAM,CAAEM;AAA9B,OAAP;;AACJ;AACE,aAAOR,KAAP;AAVJ;AAYD,CAbD;;AAeA,eAAeD,WAAf,C,CAEA;AAEA","sourcesContent":["import { AUTH, LOGOUT } from \"../constants/actionTypes\";\n\nconst authReducer = (state = { authData : null }, action) => {\n  switch (action.type) {\n    case AUTH:\n      localStorage.setItem('profile', JSON.stringify({ ...action?.data})) //save the data in local storage so on page refresh, the browser will still know we are logged in\n      return { ...state, authData: action?.data };\n\n      case LOGOUT:\n        localStorage.clear();\n\n        return { ...state, authData: action?.data};\n    default:\n      return state;\n  }\n};\n\nexport default authReducer;\n\n//from here, we move to the index.js of our reducers and import it there\n\n//Afterwards, we move to Navbar because that's the best place to use this data since we already have our user which is currently set to null in that component."]},"metadata":{},"sourceType":"module"}