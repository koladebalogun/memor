{"ast":null,"code":"import React,{useEffect}from\"react\";import{Paper,Typography,CircularProgress,Divider}from'@material-ui/core';import{useDispatch,useSelector}from'react-redux';import moment from'moment';import{useParams,useNavigate}from'react-router-dom';import CommentSection from\"./CommentSection\";import{getPost,getPostsBySearch}from'../../actions/posts';import useStyles from'./styles';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var PostDetails=function PostDetails(){var _useSelector=useSelector(function(state){return state.posts;}),post=_useSelector.post,isLoading=_useSelector.isLoading,posts=_useSelector.posts;//Getting the data about the post from the reducer.\nvar dispatch=useDispatch();var navigate=useNavigate();var classes=useStyles();var _useParams=useParams(),id=_useParams.id;//Getting the Id \n//LOGIC FOR FETCHING ONLY A SINGLE POSTS\nuseEffect(function(){dispatch(getPost(id));},[id]);//This useEffect would happen when the id changes\n//LOGIC FOR FETCHING RECOMMENDED POSTS // we'll be using the same endpoint we used for the (get post by search)\nuseEffect(function(){if(post){dispatch(getPostsBySearch({search:'none',tags:post===null||post===void 0?void 0:post.tags.join(',')}));//search is none beacuse we aren't looking for search, we are looking for tags. The tags will be used to recomment the post\n}},[post]);//These checks are making sure we don't render the page if we don't have the post already\nif(!post)return null;if(isLoading){return/*#__PURE__*/_jsx(Paper,{elevation:6,className:classes.loadingPaper,children:/*#__PURE__*/_jsx(CircularProgress,{size:\"7em\"})});}var recommendedPosts=posts.filter(function(_ref){var _id=_ref._id;return _id!==post._id;});// we will destructure the _id and then we want to keep all the posts but removes the ones where the _id is not equal to the current post._id because the current post cannot be in it's own recommended post\nvar openPost=function openPost(_id){return navigate(\"/posts/\".concat(_id));};return/*#__PURE__*/_jsxs(Paper,{style:{padding:'20px',borderRadius:'15px'},elevation:6,children:[/*#__PURE__*/_jsxs(\"div\",{className:classes.card,children:[/*#__PURE__*/_jsxs(\"div\",{className:classes.section,children:[/*#__PURE__*/_jsx(Typography,{variant:\"h3\",component:\"h2\",children:post.title}),/*#__PURE__*/_jsx(Typography,{gutterBottom:true,variant:\"h6\",color:\"textSecondary\",component:\"h2\",children:post.tags.map(function(tag){return\"#\".concat(tag,\" \");})}),/*#__PURE__*/_jsx(Typography,{gutterBottom:true,variant:\"body1\",component:\"p\",children:post.message}),/*#__PURE__*/_jsxs(Typography,{variant:\"h6\",children:[\"Created by: \",post.name]}),/*#__PURE__*/_jsx(Typography,{variant:\"body1\",children:moment(post.createdAt).fromNow()}),/*#__PURE__*/_jsx(Divider,{style:{margin:'20px 0'}}),/*#__PURE__*/_jsx(Typography,{variant:\"body1\",children:/*#__PURE__*/_jsx(\"strong\",{children:\"Realtime Chat - coming soon!\"})}),/*#__PURE__*/_jsx(Divider,{style:{margin:'20px 0'}}),/*#__PURE__*/_jsx(CommentSection,{post:post}),/*#__PURE__*/_jsx(Divider,{style:{margin:'20px 0'}})]}),/*#__PURE__*/_jsx(\"div\",{className:classes.imageSection,children:/*#__PURE__*/_jsx(\"img\",{className:classes.media,src:post.selectedFile||'https://user-images.githubusercontent.com/194400/49531010-48dad180-f8b1-11e8-8d89-1e61320e1d82.png',alt:post.title})})]}),recommendedPosts.length&&/*#__PURE__*/_jsxs(\"div\",{className:classes.section,children:[/*#__PURE__*/_jsx(Typography,{gutterBottom:true,variant:\"h5\",children:\"You might also like:\"}),/*#__PURE__*/_jsx(Divider,{}),/*#__PURE__*/_jsx(\"div\",{className:classes.recommendedPosts,children:recommendedPosts.map(function(_ref2){var title=_ref2.title,message=_ref2.message,selectedFile=_ref2.selectedFile,_id=_ref2._id,likes=_ref2.likes,name=_ref2.name;return/*#__PURE__*/_jsxs(\"div\",{style:{margin:'20px',cursor:'pointer'},onClick:function onClick(){return openPost(_id);},children:[/*#__PURE__*/_jsx(Typography,{gutterBottom:true,variant:\"h6\",children:title}),/*#__PURE__*/_jsx(Typography,{gutterBottom:true,variant:\"subtitle2\",children:name}),/*#__PURE__*/_jsx(Typography,{gutterBottom:true,variant:\"subtitle2\",children:message}),/*#__PURE__*/_jsx(Typography,{gutterBottom:true,variant:\"h6\",children:title}),/*#__PURE__*/_jsxs(Typography,{gutterBottom:true,variant:\"subtitle1\",children:[\"Likes: \",likes.length]}),/*#__PURE__*/_jsx(\"img\",{src:selectedFile,width:\"200px\"})]},_id);})})]})]});};export default PostDetails;","map":{"version":3,"sources":["/Users/koladebalogun/Desktop/New-Projects/Memoirs project/client/src/components/PostDetails/PostDetails.jsx"],"names":["React","useEffect","Paper","Typography","CircularProgress","Divider","useDispatch","useSelector","moment","useParams","useNavigate","CommentSection","getPost","getPostsBySearch","useStyles","PostDetails","state","posts","post","isLoading","dispatch","navigate","classes","id","search","tags","join","loadingPaper","recommendedPosts","filter","_id","openPost","padding","borderRadius","card","section","title","map","tag","message","name","createdAt","fromNow","margin","imageSection","media","selectedFile","length","likes","cursor"],"mappings":"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","sourcesContent":["import React,{useEffect} from \"react\";\nimport { Paper, Typography, CircularProgress, Divider } from '@material-ui/core';\nimport {useDispatch, useSelector } from 'react-redux';\nimport moment from 'moment';\nimport { useParams, useNavigate } from 'react-router-dom';\n\nimport CommentSection from \"./CommentSection\";\nimport { getPost, getPostsBySearch } from '../../actions/posts';\nimport useStyles from './styles';\n\nconst PostDetails = () => {\n   const { post, isLoading, posts} = useSelector((state) => state.posts); //Getting the data about the post from the reducer.\n   const dispatch = useDispatch();\n   const navigate = useNavigate();\n   const classes = useStyles();\n   const { id } = useParams(); //Getting the Id \n\n\n   //LOGIC FOR FETCHING ONLY A SINGLE POSTS\n   useEffect(() => {\n      dispatch(getPost(id))\n   }, [id]); //This useEffect would happen when the id changes\n\n\n   //LOGIC FOR FETCHING RECOMMENDED POSTS // we'll be using the same endpoint we used for the (get post by search)\n\n   useEffect(() => {\n    if(post){\n      dispatch(getPostsBySearch({ search: 'none', tags: post?.tags.join(',')})) //search is none beacuse we aren't looking for search, we are looking for tags. The tags will be used to recomment the post\n    }\n   }, [post])\n\n   //These checks are making sure we don't render the page if we don't have the post already\n   if(!post) return null;\n\n   if(isLoading) {\n     return (\n       <Paper elevation={6} className={classes.loadingPaper}>\n        <CircularProgress size=\"7em\" />\n       </Paper>\n     )\n   }\n\n   const recommendedPosts = posts.filter(({ _id}) => _id !== post._id ); // we will destructure the _id and then we want to keep all the posts but removes the ones where the _id is not equal to the current post._id because the current post cannot be in it's own recommended post\n\n   const openPost = (_id) => navigate(`/posts/${_id}`)\n\n   return ( \n      <Paper style={{ padding: '20px', borderRadius: '15px' }} elevation={6}>\n        <div className={classes.card}>\n          <div className={classes.section}>\n            <Typography variant=\"h3\" component=\"h2\">{post.title}</Typography>\n            <Typography gutterBottom variant=\"h6\" color=\"textSecondary\" component=\"h2\">{post.tags.map((tag) => `#${tag} `)}</Typography>\n            <Typography gutterBottom variant=\"body1\" component=\"p\">{post.message}</Typography>\n            <Typography variant=\"h6\">Created by: {post.name}</Typography>\n            <Typography variant=\"body1\">{moment(post.createdAt).fromNow()}</Typography>\n            <Divider style={{ margin: '20px 0' }} />\n            <Typography variant=\"body1\"><strong>Realtime Chat - coming soon!</strong></Typography>\n            <Divider style={{ margin: '20px 0' }} />\n\n            {/* The comment section component would be passed here */}\n            <CommentSection post={post}/> \n\n            <Divider style={{ margin: '20px 0' }} />\n          </div>\n          <div className={classes.imageSection}>\n            <img className={classes.media} src={post.selectedFile || 'https://user-images.githubusercontent.com/194400/49531010-48dad180-f8b1-11e8-8d89-1e61320e1d82.png'} alt={post.title} />\n          </div>\n        </div>\n        {/* Reccomended post */}\n        { recommendedPosts.length && (\n          <div className={classes.section}>\n            <Typography gutterBottom variant=\"h5\">You might also like:</Typography>\n            <Divider/>\n            <div className={classes.recommendedPosts}>\n              {/* We map over the recommendedPosts and destructure all the things we need */}\n              {recommendedPosts.map(({ title, message, selectedFile, _id, likes, name}) => (\n                <div style={{ margin: '20px', cursor: 'pointer' }} onClick={() => openPost(_id)} key={_id}>\n                  <Typography gutterBottom variant=\"h6\">{title}</Typography>\n                  <Typography gutterBottom variant=\"subtitle2\">{name}</Typography>\n                  <Typography gutterBottom variant=\"subtitle2\">{message}</Typography>\n                  <Typography gutterBottom variant=\"h6\">{title}</Typography>\n                  <Typography gutterBottom variant=\"subtitle1\">Likes: {likes.length}</Typography>\n                  <img src={selectedFile} width=\"200px\"/>\n                </div>\n              ))} \n            </div>\n          </div>\n        )}\n      </Paper>\n   );\n}\n \nexport default PostDetails;"]},"metadata":{},"sourceType":"module"}